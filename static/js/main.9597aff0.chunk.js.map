{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/Friend/Friend.module.css","components/Transaction/Transaction.module.css","components/StatItem/StatItem.module.css","components/FriendsList/FriendsList.module.css","data/default.jpg","components/Profile/Profile.js","components/StatItem/StatItem.js","randomColor.js","components/Statistics/Statistics.js","components/Friend/Friend.js","components/FriendsList/FriendsList.js","components/Transaction/Transaction.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","card","mainInfo","src","alt","nik","statsItem","statsCathegory","statsQuantity","followers","views","likes","defaultProps","defaultPic","StatItem","id","label","percentage","type","createRandomColor","randomInteger","min","max","rand","Math","random","round","console","log","Statistics","title","section","container","map","style","backgroundColor","Friend","isOnline","status","width","FriendsList","friends","list","friend","Transaction","amount","currency","tableItem","TransactionHistory","transactions","table","head","body","tableRow","App","statisticsData","friendsData","transactionsData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9597aff0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Profile_card__3-Oh8\",\"avatar\":\"Profile_avatar__aV4u5\",\"mainInfo\":\"Profile_mainInfo__K6nSd\",\"name\":\"Profile_name__2Psdw\",\"nik\":\"Profile_nik__3T3hp\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"statsItem\":\"Profile_statsItem__3NWvo\",\"statsCathegory\":\"Profile_statsCathegory__TAvvH\",\"statsQuantity\":\"Profile_statsQuantity__1tmYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__eBbE8\",\"head\":\"TransactionHistory_head__2FiQX\",\"name\":\"TransactionHistory_name__2iIRS\",\"body\":\"TransactionHistory_body__3H8io\",\"tableRow\":\"TransactionHistory_tableRow__2BobX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Statistics_section___gy6i\",\"title\":\"Statistics_title__3PVIg\",\"container\":\"Statistics_container__18WG2\",\"stats\":\"Statistics_stats__3stUL\",\"StatItem\":\"Statistics_StatItem__1fQ3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Friend_status__1HVFh\",\"name\":\"Friend_name__3OA8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableItem\":\"Transaction_tableItem__2RXSU\",\"type\":\"Transaction_type__7TiGL Transaction_tableItem__2RXSU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"type\":\"StatItem_type__3iBYS\",\"percentage\":\"StatItem_percentage__2U6G6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendsList_list__2VB7z\",\"friend\":\"FriendsList_friend__hLqti\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport defaultPic from './../../data/default.jpg';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={styles.card}>\n    <div className={styles.mainInfo}>\n      <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.nik}>@{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li className={styles.statsItem}>\n        <span className={styles.statsCathegory}>Followers: </span>\n        <span className={styles.statsQuantity}>{stats.followers}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.statsCathegory}>Views: </span>\n        <span className={styles.statsQuantity}>{stats.views}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.statsCathegory}>Likes: </span>\n        <span className={styles.statsQuantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\nProfile.defaultProps = {\n  avatar: defaultPic,\n};\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './StatItem.module.css';\n\nconst StatItem = ({ id, label, percentage }) => (\n  <>\n    <span className={styles.type}>{label} </span>\n    <span className={styles.percentage}>{percentage}%</span>\n  </>\n);\n\nStatItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.oneOf(['.docx', '.pdf', '.mp3', '.psd', '.pdf']),\n  percentage: PropTypes.number,\n};\n\nexport default StatItem;\n","function createRandomColor() {\n  function randomInteger(min = 0, max = 255) {\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\n    return Math.round(rand);\n  }\n  return `rgb(${randomInteger()} ${randomInteger()} ${randomInteger()})`;\n}\n\nexport default createRandomColor;\n","import React from 'react';\nimport StatItem from '../StatItem/StatItem';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport createRandomColor from '../../randomColor';\n\nconsole.log(createRandomColor(), 'hi!');\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.section}>\n    <div className={styles.container}>{title && <h2 className={styles.title}>{title}</h2>}</div>\n    <ul className={styles.stats}>\n      {stats.map(({ id, label, percentage }) => (\n        <li key={id} className={styles.StatItem} style={{ backgroundColor: createRandomColor() }}>\n          <StatItem id={id} label={label} percentage={percentage} />\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: '',\n};\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport defaultPic from './../../data/default.jpg';\nimport styles from './Friend.module.css';\n\n// const statusColor = {\n//   green: '#008000',\n//   red: '#ff0000',\n// };\n\nconst Friend = ({ avatar, name, isOnline }) => {\n  // let statusColor;\n\n  return (\n    <>\n      <span className={styles.status} style={{ backgroundColor: isOnline ? '#008000' : '#ff0000' }}>\n        {isOnline}\n      </span>\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </>\n  );\n};\n\nFriend.defaultProps = {\n  avatar: defaultPic,\n};\nFriend.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default Friend;\n","import React from 'react';\nimport Friend from '../Friend/Friend';\nimport PropTypes from 'prop-types';\nimport styles from './FriendsList.module.css';\n\nconst FriendsList = ({ friends }) => (\n  <ul className={styles.list}>\n    {friends.map(({ avatar, name, id, isOnline }) => (\n      <li className={styles.friend} key={id}>\n        <Friend avatar={avatar} name={name} isOnline={isOnline} />\n      </li>\n    ))}\n  </ul>\n);\n\nFriendsList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Transaction.module.css';\n\nconst Transaction = ({ type, amount, currency }) => (\n  <>\n    <td className={styles.type}>{type}</td>\n    <td className={styles.tableItem}>{amount}</td>\n    <td className={styles.tableItem}>{currency}</td>\n  </>\n);\n\nTransaction.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\nexport default Transaction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Transaction from '../Transaction/Transaction';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={styles.table}>\n    <thead className={styles.head}>\n      <tr>\n        <th className={styles.name}>Type</th>\n        <th className={styles.name}>Amount</th>\n        <th className={styles.name}>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody className={styles.body}>\n      {transactions.map(({ id, type, amount, currency }) => (\n        <tr key={id} className={styles.tableRow}>\n          <Transaction type={type} amount={amount} currency={currency} />\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default TransactionHistory;\n","import './App.css';\nimport React from 'react';\nimport Profile from './components/Profile/Profile';\nimport { name, tag, location, avatar, stats } from './data/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticsData from './data/stats.json';\nimport FriendsList from './components/FriendsList/FriendsList';\nimport friendsData from './data/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactionsData from './data/transactions.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile name={name} tag={tag} location={location} avatar={avatar} stats={stats} />\n      <Statistics title=\"Upload stats\" stats={statisticsData} />\n      <FriendsList friends={friendsData} />\n      <TransactionHistory transactions={transactionsData} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}